[{"/data/data/com.termux/files/home/Sofii/migrated-client/src/main.ts":"1","/data/data/com.termux/files/home/Sofii/migrated-client/src/router/index.ts":"2","/data/data/com.termux/files/home/Sofii/migrated-client/src/App.vue":"3","/data/data/com.termux/files/home/Sofii/migrated-client/src/views/HomeView.vue":"4","/data/data/com.termux/files/home/Sofii/migrated-client/src/views/auth/RegisterView.vue":"5","/data/data/com.termux/files/home/Sofii/migrated-client/src/views/auth/LoginView.vue":"6","/data/data/com.termux/files/home/Sofii/migrated-client/src/views/auth/SendResetPasswordView.vue":"7","/data/data/com.termux/files/home/Sofii/migrated-client/src/views/auth/ResetPasswordView.vue":"8","/data/data/com.termux/files/home/Sofii/migrated-client/src/layouts/main/MainLayout.vue":"9","/data/data/com.termux/files/home/Sofii/migrated-client/src/shared/success/SuccessComponent.vue":"10","/data/data/com.termux/files/home/Sofii/migrated-client/src/shared/error/ErrorComponent.vue":"11","/data/data/com.termux/files/home/Sofii/migrated-client/src/shared/loading/LoadingComponent.vue":"12","/data/data/com.termux/files/home/Sofii/migrated-client/src/store/apiStatusStore.ts":"13","/data/data/com.termux/files/home/Sofii/migrated-client/src/shared/header/HeaderComponent.vue":"14","/data/data/com.termux/files/home/Sofii/migrated-client/src/components/auth/register/RegisterForm.vue":"15","/data/data/com.termux/files/home/Sofii/migrated-client/src/components/auth/login/LoginForm.vue":"16","/data/data/com.termux/files/home/Sofii/migrated-client/src/components/auth/send-reset-password/SendResetPasswordForm.vue":"17","/data/data/com.termux/files/home/Sofii/migrated-client/src/components/auth/reset-password/ResetPasswordForm.vue":"18","/data/data/com.termux/files/home/Sofii/migrated-client/src/api/ApiService.ts":"19","/data/data/com.termux/files/home/Sofii/migrated-client/src/composables/usePost.ts":"20","/data/data/com.termux/files/home/Sofii/migrated-client/src/components/auth/social-buttons/google/GoogleButton.vue":"21","/data/data/com.termux/files/home/Sofii/migrated-client/src/components/auth/social-buttons/github/GithubButton.vue":"22"},{"size":368,"mtime":1737400384357,"results":"23","hashOfConfig":"24"},{"size":1115,"mtime":1737414687173,"results":"25","hashOfConfig":"24"},{"size":1094,"mtime":1737400384353,"results":"26","hashOfConfig":"24"},{"size":185,"mtime":1737400384360,"results":"27","hashOfConfig":"24"},{"size":286,"mtime":1737400384360,"results":"28","hashOfConfig":"24"},{"size":276,"mtime":1737414687173,"results":"29","hashOfConfig":"24"},{"size":355,"mtime":1737414687173,"results":"30","hashOfConfig":"24"},{"size":327,"mtime":1737414687173,"results":"31","hashOfConfig":"24"},{"size":493,"mtime":1737400384357,"results":"32","hashOfConfig":"24"},{"size":584,"mtime":1737400384357,"results":"33","hashOfConfig":"24"},{"size":630,"mtime":1737400384357,"results":"34","hashOfConfig":"24"},{"size":537,"mtime":1737400384357,"results":"35","hashOfConfig":"24"},{"size":782,"mtime":1737400384357,"results":"36","hashOfConfig":"24"},{"size":2376,"mtime":1737400384357,"results":"37","hashOfConfig":"24"},{"size":3364,"mtime":1737414687163,"results":"38","hashOfConfig":"24"},{"size":3171,"mtime":1737415738471,"results":"39","hashOfConfig":"24"},{"size":2170,"mtime":1737414687163,"results":"40","hashOfConfig":"24"},{"size":2595,"mtime":1737414687163,"results":"41","hashOfConfig":"24"},{"size":666,"mtime":1737400384353,"results":"42","hashOfConfig":"24"},{"size":1299,"mtime":1737414687169,"results":"43","hashOfConfig":"24"},{"size":569,"mtime":1737415288195,"results":"44","hashOfConfig":"24"},{"size":569,"mtime":1737415355981,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"5d6tuy",{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/data/data/com.termux/files/home/Sofii/migrated-client/src/main.ts",[],"/data/data/com.termux/files/home/Sofii/migrated-client/src/router/index.ts",[],"/data/data/com.termux/files/home/Sofii/migrated-client/src/App.vue",[],"/data/data/com.termux/files/home/Sofii/migrated-client/src/views/HomeView.vue",[],"/data/data/com.termux/files/home/Sofii/migrated-client/src/views/auth/RegisterView.vue",[],"/data/data/com.termux/files/home/Sofii/migrated-client/src/views/auth/LoginView.vue",[],"/data/data/com.termux/files/home/Sofii/migrated-client/src/views/auth/SendResetPasswordView.vue",[],"/data/data/com.termux/files/home/Sofii/migrated-client/src/views/auth/ResetPasswordView.vue",[],"/data/data/com.termux/files/home/Sofii/migrated-client/src/layouts/main/MainLayout.vue",[],"/data/data/com.termux/files/home/Sofii/migrated-client/src/shared/success/SuccessComponent.vue",[],"/data/data/com.termux/files/home/Sofii/migrated-client/src/shared/error/ErrorComponent.vue",[],"/data/data/com.termux/files/home/Sofii/migrated-client/src/shared/loading/LoadingComponent.vue",[],"/data/data/com.termux/files/home/Sofii/migrated-client/src/store/apiStatusStore.ts",[],"/data/data/com.termux/files/home/Sofii/migrated-client/src/shared/header/HeaderComponent.vue",[],"/data/data/com.termux/files/home/Sofii/migrated-client/src/components/auth/register/RegisterForm.vue",["94"],"<template>\n  <div>\n    <div class=\"container\">\n      <div class=\"wrapper\">\n        <div class=\"login-form\">\n          <h1 class=\"lf-h1\">Welcome To Sofii!</h1>\n          <form @submit.prevent=\"handleSubmit\">\n            <div class=\"inp-box\">\n              <input\n                v-model=\"username\"\n                type=\"text\"\n                placeholder=\"Username\"\n              />\n              <i class=\"fa fa-user icon\"></i>\n              <span v-if=\"errors.username\" class=\"val-error\">{{ errors.username }}</span>\n            </div>\n            <div class=\"inp-box\">\n              <input\n                v-model=\"email\"\n                type=\"email\"\n                placeholder=\"Email\"\n              />\n              <i class=\"fa fa-envelope icon\"></i>\n              <span v-if=\"errors.email\" class=\"val-error\">{{ errors.email }}</span>\n            </div>\n            <div class=\"inp-box\">\n              <input\n                v-model=\"password\"\n                type=\"password\"\n                placeholder=\"Secure Password\"\n              />\n              <i class=\"fa fa-lock icon\"></i>\n              <span v-if=\"errors.password\" class=\"val-error\">{{ errors.password }}</span>\n            </div>\n            <div class=\"btn-box\">\n              <button type=\"submit\">\n                Register\n                <i class=\"fa fa-arrow-right\"></i>\n              </button>\n            </div>\n            <div class=\"form-links\">\n              <div>\n                <a href=\"\">Already Have An Account?</a>\n              </div>\n            </div>\n          </form>\n        </div>\n        <div class=\"login-social-media\">\n          <div class=\"social-buttons\">\n            <!-- Social media buttons here -->\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n</template>\n\n<script lang=\"ts\">\nimport { ref } from \"vue\";\nimport { useForm, useField } from \"vee-validate\";\nimport * as yup from \"yup\";\nimport { useRouter } from 'vue-router';\nimport { apiService } from '@/api/ApiService';\nimport { usePost } from '@/composables/usePost';\n\ninterface RegisterFormValues {\n  username: string;\n  password: string;\n  email: string;\n}\n\nexport default {\n  name: 'RegisterForm', \n  setup() {\n    const router = useRouter();\n    const validationSchema = yup.object({\n      username: yup.string().required(\"Username required\"), \n      email: yup.string().email(\"Invalid email\").required(\"Email required\"),\n      password: yup.string().min(6, \"Password must have at least 6 chars\").required(\"Password required\"),\n    });\n\n    const { handleSubmit, errors } = useForm<RegisterFormValues>({\n      validationSchema,\n    });\n\n    const { value: username } = useField(\"username\"); \n    const { value: email } = useField(\"email\");\n    const { value: password } = useField(\"password\");\n    \n    const { mutate } = usePost<RegisterFormValues>({\n      serviceFunc: (data: RegisterFormValues) => apiService.post('/auth/register', data),\n      successFunc: () => router.push({ name: \"home\"}), \n      withError: true,\n      withLoading: true,\n    });\n\n    const onSubmit = async (values: RegisterFormValues) => {\n      console.log(\"Form submitted:\", values);\n      await mutate(values); \n    };\n\n    return {\n      email,\n      password,\n      username, \n      errors,\n      handleSubmit: handleSubmit(onSubmit),\n    };\n  },\n};\n</script>\n\n<style scoped src=\"./RegisterForm.css\"></style>","/data/data/com.termux/files/home/Sofii/migrated-client/src/components/auth/login/LoginForm.vue",[],"/data/data/com.termux/files/home/Sofii/migrated-client/src/components/auth/send-reset-password/SendResetPasswordForm.vue",["95"],"<template>\n    <div>\n      <div class=\"outer-container\">\n        <div class=\"container\">\n          <h2>¿Forgot Your Password?</h2>\n          <p>Enter Your Email. If Your Email Exists On Our System, You Will Receive a URL To Reset Your Password.</p>\n  \n          <form @submit.prevent=\"handleSubmit\">\n            <div class=\"inp-box\">\n              <input v-model=\"email\" type=\"email\" placeholder=\"Enter Your Email\" required />\n              <i class=\"fas fa-envelope icon\"></i>\n              <span v-if=\"errors.email\" class=\"val-error\">{{ errors.email }}</span>\n            </div>\n\n            <div class=\"btn-box\">\n              <button type=\"submit\">\n                Send Code\n                <i class=\"fas fa-arrow-right\"></i>\n              </button>\n            </div>\n          </form>\n  \n        </div>\n      </div>\n    </div>\n  </template>\n  \n\n  <script lang=\"ts\">\n  import { defineComponent, ref } from 'vue';\n  import { useForm, useField } from 'vee-validate';\n  import * as yup from 'yup';\n  import { apiService } from '@/api/ApiService';\n  import { usePost } from '@/composables/usePost';\n\n  interface ForgotPasswordFormValues {\n    email: string;\n  }\n\n  export default defineComponent({\n    name: 'SendResetPassword',\n    setup() {\n\n\n      const validationSchema = yup.object({\n        email: yup.string().email(\"Invalid email\").required(\"Email required\"),\n      });\n\n      const { handleSubmit, errors } = useForm<ForgotPasswordFormValues>({\n        validationSchema,\n      });\n\n      const { value: email } = useField('email');\n\n      const { mutate } = usePost<ForgotPasswordFormValues>({\n        serviceFunc: (data: ForgotPasswordFormValues) => apiService.post('/auth/send-reset-password', data),\n        successMessage: \"Please check your email.\",\n        withError: true,\n        withLoading: true,\n      });\n\n      const onSubmit = async (values: ForgotPasswordFormValues) => {\n        console.log(\"Form submitted:\", values);\n        await mutate(values);\n      };\n\n      return {\n        email,\n        errors,\n        handleSubmit: handleSubmit(onSubmit),\n      };\n    },\n  });\n</script>\n\n\n<style scoped src=\"./SendResetPasswordForm.css\">\n\n</style>","/data/data/com.termux/files/home/Sofii/migrated-client/src/components/auth/reset-password/ResetPasswordForm.vue",["96"],"<template>\n    <div>\n      <div class=\"out\">\n        <div class=\"container\">\n          <h2>Change Your Password</h2>\n          \n          <form @submit.prevent=\"handleSubmit\">\n            <div class=\"inp-box\">\n              <input v-model=\"password\" type=\"password\" placeholder=\"New Password\" required />\n              <i class=\"fas fa-lock icon\"></i>\n              <span v-if=\"errors.password\" class=\"val-error\">{{ errors.password }}</span>\n            </div>\n  \n            <div class=\"btn-box\">\n              <button type=\"submit\">\n                Update Your Password\n                <i class=\"fas fa-arrow-left\"></i>\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script lang=\"ts\">\n  import { defineComponent, ref, onMounted } from 'vue';\n  import { useRoute } from 'vue-router';\n  import { useForm, useField } from 'vee-validate';\n  import * as yup from 'yup';\n  import { apiService } from '@/api/ApiService';\n  import { usePost } from '@/composables/usePost';\n\n  interface ResetPasswordFormValues {\n    email: string;\n    token: string;\n    password: string; \n  }\n\n  export default defineComponent({\n    name: 'ResetPassword',\n    setup() {\n      const route = useRoute();\n      const email = ref<string>('');  \n      const token = ref<string>('');  \n      const password = ref<string>(''); \n      const loading = ref(false);\n\n      onMounted(() => {\n        email.value = route.params.email as string;\n        token.value = route.params.token as string;\n      });\n\n      const validationSchema = yup.object({\n        password: yup\n          .string()\n          .min(6, \"Password must have at least 6 chars\")\n          .required(\"Password is required\"),  \n      });\n\n      const { handleSubmit, errors } = useForm<ResetPasswordFormValues>({\n        validationSchema,\n      });\n\n      const { value: passwordField } = useField('password');  \n      \n      const { mutate } = usePost<ResetPasswordFormValues>({\n        serviceFunc: (data: ResetPasswordFormValues) => apiService.post('/auth/reset-password', data),\n        successMessage: 'Your Password Is Set!', \n        withError: true,\n        withLoading: true,\n      });\n\n      const onSubmit = async (values: ResetPasswordFormValues) => {\n        console.log(\"Form submitted:\", values);\n        await mutate(values);  \n      };\n\n      return {\n        email,\n        token,\n        password, \n        errors,\n        handleSubmit: handleSubmit(onSubmit),\n        loading,\n      };\n    },\n  });\n</script>\n\n\n\n<style scoped src=\"./ResetPasswordForm.css\">\n\n</style>\n","/data/data/com.termux/files/home/Sofii/migrated-client/src/api/ApiService.ts",[],"/data/data/com.termux/files/home/Sofii/migrated-client/src/composables/usePost.ts",["97","98","99"],"import { useMutation } from '@tanstack/vue-query'\nimport { apiStatusStore } from '@/store/apiStatusStore';\n\ninterface UsePostOptions<T> {\n  serviceFunc: (data: T) => Promise<any>,\n  successFunc?: () => void, \n  successMessage?: string,\n  withError: boolean,\n  withLoading: boolean\n}\n\nexport function usePost<T>({\n  serviceFunc,\n  successFunc,\n  successMessage,\n  withError,\n  withLoading\n}: UsePostOptions<T>) {\n    const apiStore = apiStatusStore(); \n\n  const mutation = useMutation({\n    mutationFn: (data: T) => serviceFunc(data),\n    \n    onMutate: () => {\n      if (withLoading) {\n        apiStore.setLoading(true); \n      }\n    },\n    \n    onError: (error: any) => {\n      console.error(error)\n      if (withError) {\n        apiStore.setError(\"Something went wrong...\"); \n      }\n    },\n    \n    onSuccess: (response: any) => {\n      if (successFunc) {\n        successFunc()  \n      } else if (successMessage) {\n        apiStore.setSuccess(successMessage)\n      } else {\n        console.log(\"Success.\")\n      }\n      \n      console.log(\"Response on onSuccess\", response)\n\n      return response\n    },\n\n    onSettled: () => {\n      if (withLoading) {\n        apiStore.setLoading(false);\n      }\n    }\n  })\n\n  return {\n    mutate: mutation.mutate,       \n    data: mutation.data        \n  }\n}  \n","/data/data/com.termux/files/home/Sofii/migrated-client/src/components/auth/social-buttons/google/GoogleButton.vue",[],"/data/data/com.termux/files/home/Sofii/migrated-client/src/components/auth/social-buttons/github/GithubButton.vue",["100"],{"ruleId":"101","severity":1,"message":"102","line":60,"column":10,"nodeType":"103","messageId":"104","endLine":60,"endColumn":13},{"ruleId":"101","severity":1,"message":"102","line":30,"column":29,"nodeType":"103","messageId":"104","endLine":30,"endColumn":32},{"ruleId":"101","severity":1,"message":"105","line":65,"column":22,"nodeType":"103","messageId":"104","endLine":65,"endColumn":35},{"ruleId":"106","severity":1,"message":"107","line":5,"column":37,"nodeType":"108","messageId":"109","endLine":5,"endColumn":40,"suggestions":"110"},{"ruleId":"106","severity":1,"message":"107","line":30,"column":22,"nodeType":"108","messageId":"109","endLine":30,"endColumn":25,"suggestions":"111"},{"ruleId":"106","severity":1,"message":"107","line":37,"column":27,"nodeType":"108","messageId":"109","endLine":37,"endColumn":30,"suggestions":"112"},{"ruleId":"113","severity":2,"message":"114","line":27,"column":9,"nodeType":"115"},"@typescript-eslint/no-unused-vars","'ref' is defined but never used.","Identifier","unusedVar","'passwordField' is assigned a value but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["116","117"],["118","119"],["120","121"],"vue/no-parsing-error","Parsing error: eof-in-tag.","VElement",{"messageId":"122","fix":"123","desc":"124"},{"messageId":"125","fix":"126","desc":"127"},{"messageId":"122","fix":"128","desc":"124"},{"messageId":"125","fix":"129","desc":"127"},{"messageId":"122","fix":"130","desc":"124"},{"messageId":"125","fix":"131","desc":"127"},"suggestUnknown",{"range":"132","text":"133"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"132","text":"134"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"135","text":"133"},{"range":"135","text":"134"},{"range":"136","text":"133"},{"range":"136","text":"134"},[174,177],"unknown","never",[663,666],[824,827]]