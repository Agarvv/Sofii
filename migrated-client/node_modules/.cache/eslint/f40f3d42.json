[{"/data/data/com.termux/files/home/Sofii/migrated-client/src/main.ts":"1","/data/data/com.termux/files/home/Sofii/migrated-client/src/router/index.ts":"2","/data/data/com.termux/files/home/Sofii/migrated-client/src/App.vue":"3","/data/data/com.termux/files/home/Sofii/migrated-client/src/views/home/HomeView.vue":"4","/data/data/com.termux/files/home/Sofii/migrated-client/src/views/auth/RegisterView.vue":"5","/data/data/com.termux/files/home/Sofii/migrated-client/src/views/auth/LoginView.vue":"6","/data/data/com.termux/files/home/Sofii/migrated-client/src/views/auth/ResetPasswordView.vue":"7","/data/data/com.termux/files/home/Sofii/migrated-client/src/views/auth/SendResetPasswordView.vue":"8","/data/data/com.termux/files/home/Sofii/migrated-client/src/shared/error/ErrorComponent.vue":"9","/data/data/com.termux/files/home/Sofii/migrated-client/src/shared/success/SuccessComponent.vue":"10","/data/data/com.termux/files/home/Sofii/migrated-client/src/shared/loading/LoadingComponent.vue":"11","/data/data/com.termux/files/home/Sofii/migrated-client/src/store/apiStatusStore.ts":"12","/data/data/com.termux/files/home/Sofii/migrated-client/src/shared/header/HeaderComponent.vue":"13","/data/data/com.termux/files/home/Sofii/migrated-client/src/shared/aside/AsideComponent.vue":"14","/data/data/com.termux/files/home/Sofii/migrated-client/src/shared/post/PostCard.vue":"15","/data/data/com.termux/files/home/Sofii/migrated-client/src/composables/useGet.ts":"16","/data/data/com.termux/files/home/Sofii/migrated-client/src/components/home/users-may-like/UsersMayLike.vue":"17","/data/data/com.termux/files/home/Sofii/migrated-client/src/components/auth/register/RegisterForm.vue":"18","/data/data/com.termux/files/home/Sofii/migrated-client/src/components/auth/reset-password/ResetPasswordForm.vue":"19","/data/data/com.termux/files/home/Sofii/migrated-client/src/components/auth/login/LoginForm.vue":"20","/data/data/com.termux/files/home/Sofii/migrated-client/src/components/auth/send-reset-password/SendResetPasswordForm.vue":"21","/data/data/com.termux/files/home/Sofii/migrated-client/src/components/auth/social-buttons/google/GoogleButton.vue":"22","/data/data/com.termux/files/home/Sofii/migrated-client/src/components/auth/social-buttons/github/GithubButton.vue":"23","/data/data/com.termux/files/home/Sofii/migrated-client/src/composables/usePost.ts":"24","/data/data/com.termux/files/home/Sofii/migrated-client/src/api/ApiService.ts":"25","/data/data/com.termux/files/home/Sofii/migrated-client/src/shared/post/like/LikeButton.vue":"26","/data/data/com.termux/files/home/Sofii/migrated-client/src/shared/post/save/SaveButton.vue":"27","/data/data/com.termux/files/home/Sofii/migrated-client/src/composables/useLike.ts":"28"},{"size":368,"mtime":1737400384357,"results":"29","hashOfConfig":"30"},{"size":1734,"mtime":1737483337216,"results":"31","hashOfConfig":"30"},{"size":1094,"mtime":1737400384353,"results":"32","hashOfConfig":"30"},{"size":1847,"mtime":1737499237929,"results":"33","hashOfConfig":"30"},{"size":286,"mtime":1737400384360,"results":"34","hashOfConfig":"30"},{"size":276,"mtime":1737414687173,"results":"35","hashOfConfig":"30"},{"size":327,"mtime":1737414687173,"results":"36","hashOfConfig":"30"},{"size":355,"mtime":1737414687173,"results":"37","hashOfConfig":"30"},{"size":630,"mtime":1737400384357,"results":"38","hashOfConfig":"30"},{"size":584,"mtime":1737400384357,"results":"39","hashOfConfig":"30"},{"size":537,"mtime":1737400384357,"results":"40","hashOfConfig":"30"},{"size":782,"mtime":1737400384357,"results":"41","hashOfConfig":"30"},{"size":2376,"mtime":1737400384357,"results":"42","hashOfConfig":"30"},{"size":2107,"mtime":1737482293667,"results":"43","hashOfConfig":"30"},{"size":1797,"mtime":1737504709767,"results":"44","hashOfConfig":"30"},{"size":904,"mtime":1737498916735,"results":"45","hashOfConfig":"30"},{"size":775,"mtime":1737498916731,"results":"46","hashOfConfig":"30"},{"size":3364,"mtime":1737414687163,"results":"47","hashOfConfig":"30"},{"size":2157,"mtime":1737424173688,"results":"48","hashOfConfig":"30"},{"size":3179,"mtime":1737418729335,"results":"49","hashOfConfig":"30"},{"size":2170,"mtime":1737414687163,"results":"50","hashOfConfig":"30"},{"size":569,"mtime":1737415288195,"results":"51","hashOfConfig":"30"},{"size":568,"mtime":1737418729335,"results":"52","hashOfConfig":"30"},{"size":1299,"mtime":1737414687169,"results":"53","hashOfConfig":"30"},{"size":666,"mtime":1737400384353,"results":"54","hashOfConfig":"30"},{"size":746,"mtime":1737501382953,"results":"55","hashOfConfig":"30"},{"size":715,"mtime":1737505387758,"results":"56","hashOfConfig":"30"},{"size":771,"mtime":1737502003198,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"5d6tuy",{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/data/data/com.termux/files/home/Sofii/migrated-client/src/main.ts",[],"/data/data/com.termux/files/home/Sofii/migrated-client/src/router/index.ts",["120"],"import { createRouter, createWebHashHistory, RouteRecordRaw } from 'vue-router'\nimport HomeView from '../views/home/HomeView.vue'\nimport MainLayout from '@/layouts/main/MainLayout.vue'\nimport RegisterView from '@/views/auth/RegisterView.vue'\nimport LoginView from '@/views/auth/LoginView.vue'\nimport SendResetPasswordView from '@/views/auth/SendResetPasswordView.vue'\nimport ResetPasswordView from '@/views/auth/ResetPasswordView.vue'\nimport axios from 'axios'\n\nconst routes: Array<RouteRecordRaw> = [\n  {\n    path: '/register',\n    component: RegisterView,\n    name: \"register\"\n  }, \n  {\n    path: '/login',\n    component: LoginView,\n    name: \"login\"\n  },\n  {\n    path: '/send-reset-password',\n    component: SendResetPasswordView,\n    name: \"sendResetPassword\"\n  }, \n  {\n    path: '/reset-password/:email/:token',\n    component: ResetPasswordView,\n    name: \"resetPassword\"\n  },  \n  {\n      path: '/',\n        component: HomeView,\n        name: \"home\",\n  }\n]\n\nconst router = createRouter({\n  history: createWebHashHistory(),\n  routes\n})\n\n\nconst isAuthenticated = async (): Promise<boolean> => {\n  try {\n    const response = await axios.get('https://sofii-vsly.onrender.com/api/sofii/auth/check', {\n        withCredentials: true \n    }); \n    \n    console.log('authenticated response', response)\n    \n    console.log(\"authenticated condition\", response.status == 200)\n    return response.status == 200; \n    \n  } catch (error) {\n    return false;  \n  }\n}\n\nrouter.beforeEach(async (to, from, next) => {\n  if (to.meta.requiresAuth) {\n    const authenticated = await isAuthenticated();  \n\n    if (!authenticated) {\n      next({ name: 'login' });\n    } else {\n      next(); \n    }\n  } else {\n    next();  \n  }\n});\n\nexport default router","/data/data/com.termux/files/home/Sofii/migrated-client/src/App.vue",[],"/data/data/com.termux/files/home/Sofii/migrated-client/src/views/home/HomeView.vue",["121"],"<template>\n  <HeaderComponent />  \n  <div class=\"layout\">\n    <div class=\"aside\">\n      <AsideComponent /> \n    </div>\n    \n    <main class=\"main\">\n      <div class=\"posts\">\n        <div v-if=\"loading\">Cargando publicaciones...</div>\n        <PostCard \n          v-for=\"post in data.posts\" \n          :key=\"post.id\" \n          :post=\"post\"\n        />\n      </div>\n    </main>\n    \n    <div class=\"right-aside\">\n      <UsersMayLike v-if=\"!loading\" :recomendedUsers=\"data.users\" />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, onMounted } from 'vue'; \nimport HeaderComponent from '@/shared/header/HeaderComponent.vue';\nimport AsideComponent from '@/shared/aside/AsideComponent.vue';\nimport UsersMayLike from '@/components/home/users-may-like/UsersMayLike.vue';\nimport { useGet } from '@/composables/useGet';\nimport PostCard from '@/shared/post/PostCard.vue';\nimport { apiStatusStore } from '@/store/apiStatusStore';\nimport { Post } from '@/types/posts/Post';\nimport { UserMayLike } from '@/types/users/UserMayLike';\n\nexport default defineComponent({\n  name: 'HomeView',\n  components: {\n    HeaderComponent,\n    AsideComponent,\n    UsersMayLike,\n    PostCard\n  },\n  setup() {\n    const apiStore = apiStatusStore();\n    \n    const data = ref<{ posts: Post[], users: UserMayLike[] }>({ posts: [], users: [] });\n\n    const fetchData = async () => {\n      try {\n        const response = await useGet<{ posts: Post[], users: UserMayLike[] }>({\n          endpoint: '/posts',\n          withError: true\n        });\n\n        if (response) {\n          data.value = response;\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    onMounted(() => {\n      fetchData();\n    });\n\n    return {\n      data\n    };\n  }\n});\n</script>\n\n<style scoped src=\"./HomeView.css\"></style>","/data/data/com.termux/files/home/Sofii/migrated-client/src/views/auth/RegisterView.vue",[],"/data/data/com.termux/files/home/Sofii/migrated-client/src/views/auth/LoginView.vue",[],"/data/data/com.termux/files/home/Sofii/migrated-client/src/views/auth/ResetPasswordView.vue",[],"/data/data/com.termux/files/home/Sofii/migrated-client/src/views/auth/SendResetPasswordView.vue",[],"/data/data/com.termux/files/home/Sofii/migrated-client/src/shared/error/ErrorComponent.vue",[],"/data/data/com.termux/files/home/Sofii/migrated-client/src/shared/success/SuccessComponent.vue",[],"/data/data/com.termux/files/home/Sofii/migrated-client/src/shared/loading/LoadingComponent.vue",[],"/data/data/com.termux/files/home/Sofii/migrated-client/src/store/apiStatusStore.ts",[],"/data/data/com.termux/files/home/Sofii/migrated-client/src/shared/header/HeaderComponent.vue",[],"/data/data/com.termux/files/home/Sofii/migrated-client/src/shared/aside/AsideComponent.vue",[],"/data/data/com.termux/files/home/Sofii/migrated-client/src/shared/post/PostCard.vue",[],"/data/data/com.termux/files/home/Sofii/migrated-client/src/composables/useGet.ts",[],"/data/data/com.termux/files/home/Sofii/migrated-client/src/components/home/users-may-like/UsersMayLike.vue",[],"/data/data/com.termux/files/home/Sofii/migrated-client/src/components/auth/register/RegisterForm.vue",["122"],"<template>\n  <div>\n    <div class=\"container\">\n      <div class=\"wrapper\">\n        <div class=\"login-form\">\n          <h1 class=\"lf-h1\">Welcome To Sofii!</h1>\n          <form @submit.prevent=\"handleSubmit\">\n            <div class=\"inp-box\">\n              <input\n                v-model=\"username\"\n                type=\"text\"\n                placeholder=\"Username\"\n              />\n              <i class=\"fa fa-user icon\"></i>\n              <span v-if=\"errors.username\" class=\"val-error\">{{ errors.username }}</span>\n            </div>\n            <div class=\"inp-box\">\n              <input\n                v-model=\"email\"\n                type=\"email\"\n                placeholder=\"Email\"\n              />\n              <i class=\"fa fa-envelope icon\"></i>\n              <span v-if=\"errors.email\" class=\"val-error\">{{ errors.email }}</span>\n            </div>\n            <div class=\"inp-box\">\n              <input\n                v-model=\"password\"\n                type=\"password\"\n                placeholder=\"Secure Password\"\n              />\n              <i class=\"fa fa-lock icon\"></i>\n              <span v-if=\"errors.password\" class=\"val-error\">{{ errors.password }}</span>\n            </div>\n            <div class=\"btn-box\">\n              <button type=\"submit\">\n                Register\n                <i class=\"fa fa-arrow-right\"></i>\n              </button>\n            </div>\n            <div class=\"form-links\">\n              <div>\n                <a href=\"\">Already Have An Account?</a>\n              </div>\n            </div>\n          </form>\n        </div>\n        <div class=\"login-social-media\">\n          <div class=\"social-buttons\">\n            <!-- Social media buttons here -->\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n</template>\n\n<script lang=\"ts\">\nimport { ref } from \"vue\";\nimport { useForm, useField } from \"vee-validate\";\nimport * as yup from \"yup\";\nimport { useRouter } from 'vue-router';\nimport { apiService } from '@/api/ApiService';\nimport { usePost } from '@/composables/usePost';\n\ninterface RegisterFormValues {\n  username: string;\n  password: string;\n  email: string;\n}\n\nexport default {\n  name: 'RegisterForm', \n  setup() {\n    const router = useRouter();\n    const validationSchema = yup.object({\n      username: yup.string().required(\"Username required\"), \n      email: yup.string().email(\"Invalid email\").required(\"Email required\"),\n      password: yup.string().min(6, \"Password must have at least 6 chars\").required(\"Password required\"),\n    });\n\n    const { handleSubmit, errors } = useForm<RegisterFormValues>({\n      validationSchema,\n    });\n\n    const { value: username } = useField(\"username\"); \n    const { value: email } = useField(\"email\");\n    const { value: password } = useField(\"password\");\n    \n    const { mutate } = usePost<RegisterFormValues>({\n      serviceFunc: (data: RegisterFormValues) => apiService.post('/auth/register', data),\n      successFunc: () => router.push({ name: \"home\"}), \n      withError: true,\n      withLoading: true,\n    });\n\n    const onSubmit = async (values: RegisterFormValues) => {\n      console.log(\"Form submitted:\", values);\n      await mutate(values); \n    };\n\n    return {\n      email,\n      password,\n      username, \n      errors,\n      handleSubmit: handleSubmit(onSubmit),\n    };\n  },\n};\n</script>\n\n<style scoped src=\"./RegisterForm.css\"></style>","/data/data/com.termux/files/home/Sofii/migrated-client/src/components/auth/reset-password/ResetPasswordForm.vue",["123"],"<template>\n  <div>\n    <div class=\"out\">\n      <div class=\"container\">\n        <h2>Change Your Password</h2>\n        <form @submit.prevent=\"handleSubmit\"> \n          <input\n            v-model=\"password\" \n            type=\"password\" \n            placeholder=\"New Password\"\n            required\n          />\n          <span v-if=\"errors.password\" class=\"val-error\">{{ errors.password }}</span>\n\n          <button type=\"submit\">Update Your Password</button>\n        </form> \n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { ref } from \"vue\";\nimport { useForm, useField } from \"vee-validate\";\nimport * as yup from \"yup\";\nimport { useRoute } from 'vue-router';\nimport { apiService } from '@/api/ApiService';\n  import { usePost } from '@/composables/usePost';\n\n\ninterface ResetPasswordFormValues {\n  email: string;\n  resetToken: string;\n  password: string;\n}\n\nexport default {\n  name: 'ResetPasswordForm', \n  setup() {\n      \n    const route = useRoute();\n    const email = route.params.email as string || ''; \n    const resetToken = route.params.token as string || ''; \n\n    const validationSchema = yup.object({\n      password: yup.string().min(6, \"Password must have at least 6 characters\").required(\"Password is required\"),\n    });\n\n    const { handleSubmit, errors } = useForm<ResetPasswordFormValues>({\n      validationSchema,\n    });\n\n    const { value: password } = useField(\"password\");\n    \n    const { mutate } = usePost<ResetPasswordFormValues>({\n        serviceFunc: (data: ResetPasswordFormValues) => apiService.post('/auth/reset-password', data),\n        successMessage: \"Your password is set!\", \n        withError: true,\n        withLoading: true,\n      });\n\n\n    const onSubmit = async (values: ResetPasswordFormValues) => {\n      const formData = {\n        email: email,\n        resetToken: resetToken,\n        password: values.password,\n      };\n      console.log(\"Password reset submitted with data:\", formData);\n      \n      await mutate(formData); \n    };\n\n    return {\n      password,\n      errors,\n      handleSubmit: handleSubmit(onSubmit),\n    };\n  },\n};\n</script>\n\n<style src=\"./ResetPasswordForm.css\"></style>","/data/data/com.termux/files/home/Sofii/migrated-client/src/components/auth/login/LoginForm.vue",[],"/data/data/com.termux/files/home/Sofii/migrated-client/src/components/auth/send-reset-password/SendResetPasswordForm.vue",["124"],"<template>\n    <div>\n      <div class=\"outer-container\">\n        <div class=\"container\">\n          <h2>¿Forgot Your Password?</h2>\n          <p>Enter Your Email. If Your Email Exists On Our System, You Will Receive a URL To Reset Your Password.</p>\n  \n          <form @submit.prevent=\"handleSubmit\">\n            <div class=\"inp-box\">\n              <input v-model=\"email\" type=\"email\" placeholder=\"Enter Your Email\" required />\n              <i class=\"fas fa-envelope icon\"></i>\n              <span v-if=\"errors.email\" class=\"val-error\">{{ errors.email }}</span>\n            </div>\n\n            <div class=\"btn-box\">\n              <button type=\"submit\">\n                Send Code\n                <i class=\"fas fa-arrow-right\"></i>\n              </button>\n            </div>\n          </form>\n  \n        </div>\n      </div>\n    </div>\n  </template>\n  \n\n  <script lang=\"ts\">\n  import { defineComponent, ref } from 'vue';\n  import { useForm, useField } from 'vee-validate';\n  import * as yup from 'yup';\n  import { apiService } from '@/api/ApiService';\n  import { usePost } from '@/composables/usePost';\n\n  interface ForgotPasswordFormValues {\n    email: string;\n  }\n\n  export default defineComponent({\n    name: 'SendResetPassword',\n    setup() {\n\n\n      const validationSchema = yup.object({\n        email: yup.string().email(\"Invalid email\").required(\"Email required\"),\n      });\n\n      const { handleSubmit, errors } = useForm<ForgotPasswordFormValues>({\n        validationSchema,\n      });\n\n      const { value: email } = useField('email');\n\n      const { mutate } = usePost<ForgotPasswordFormValues>({\n        serviceFunc: (data: ForgotPasswordFormValues) => apiService.post('/auth/send-reset-password', data),\n        successMessage: \"Please check your email.\",\n        withError: true,\n        withLoading: true,\n      });\n\n      const onSubmit = async (values: ForgotPasswordFormValues) => {\n        console.log(\"Form submitted:\", values);\n        await mutate(values);\n      };\n\n      return {\n        email,\n        errors,\n        handleSubmit: handleSubmit(onSubmit),\n      };\n    },\n  });\n</script>\n\n\n<style scoped src=\"./SendResetPasswordForm.css\">\n\n</style>","/data/data/com.termux/files/home/Sofii/migrated-client/src/components/auth/social-buttons/google/GoogleButton.vue",[],"/data/data/com.termux/files/home/Sofii/migrated-client/src/components/auth/social-buttons/github/GithubButton.vue",[],"/data/data/com.termux/files/home/Sofii/migrated-client/src/composables/usePost.ts",["125","126","127"],"import { useMutation } from '@tanstack/vue-query'\nimport { apiStatusStore } from '@/store/apiStatusStore';\n\ninterface UsePostOptions<T> {\n  serviceFunc: (data: T) => Promise<any>,\n  successFunc?: () => void, \n  successMessage?: string,\n  withError: boolean,\n  withLoading: boolean\n}\n\nexport function usePost<T>({\n  serviceFunc,\n  successFunc,\n  successMessage,\n  withError,\n  withLoading\n}: UsePostOptions<T>) {\n    const apiStore = apiStatusStore(); \n\n  const mutation = useMutation({\n    mutationFn: (data: T) => serviceFunc(data),\n    \n    onMutate: () => {\n      if (withLoading) {\n        apiStore.setLoading(true); \n      }\n    },\n    \n    onError: (error: any) => {\n      console.error(error)\n      if (withError) {\n        apiStore.setError(\"Something went wrong...\"); \n      }\n    },\n    \n    onSuccess: (response: any) => {\n      if (successFunc) {\n        successFunc()  \n      } else if (successMessage) {\n        apiStore.setSuccess(successMessage)\n      } else {\n        console.log(\"Success.\")\n      }\n      \n      console.log(\"Response on onSuccess\", response)\n\n      return response\n    },\n\n    onSettled: () => {\n      if (withLoading) {\n        apiStore.setLoading(false);\n      }\n    }\n  })\n\n  return {\n    mutate: mutation.mutate,       \n    data: mutation.data        \n  }\n}  \n","/data/data/com.termux/files/home/Sofii/migrated-client/src/api/ApiService.ts",[],"/data/data/com.termux/files/home/Sofii/migrated-client/src/shared/post/like/LikeButton.vue",[],"/data/data/com.termux/files/home/Sofii/migrated-client/src/shared/post/save/SaveButton.vue",[],"/data/data/com.termux/files/home/Sofii/migrated-client/src/composables/useLike.ts",[],{"ruleId":"128","severity":1,"message":"129","line":3,"column":8,"nodeType":"130","messageId":"131","endLine":3,"endColumn":18},{"ruleId":"128","severity":1,"message":"132","line":45,"column":11,"nodeType":"130","messageId":"131","endLine":45,"endColumn":19},{"ruleId":"128","severity":1,"message":"133","line":60,"column":10,"nodeType":"130","messageId":"131","endLine":60,"endColumn":13},{"ruleId":"128","severity":1,"message":"133","line":23,"column":10,"nodeType":"130","messageId":"131","endLine":23,"endColumn":13},{"ruleId":"128","severity":1,"message":"133","line":30,"column":29,"nodeType":"130","messageId":"131","endLine":30,"endColumn":32},{"ruleId":"134","severity":1,"message":"135","line":5,"column":37,"nodeType":"136","messageId":"137","endLine":5,"endColumn":40,"suggestions":"138"},{"ruleId":"134","severity":1,"message":"135","line":30,"column":22,"nodeType":"136","messageId":"137","endLine":30,"endColumn":25,"suggestions":"139"},{"ruleId":"134","severity":1,"message":"135","line":37,"column":27,"nodeType":"136","messageId":"137","endLine":37,"endColumn":30,"suggestions":"140"},"@typescript-eslint/no-unused-vars","'MainLayout' is defined but never used.","Identifier","unusedVar","'apiStore' is assigned a value but never used.","'ref' is defined but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["141","142"],["143","144"],["145","146"],{"messageId":"147","fix":"148","desc":"149"},{"messageId":"150","fix":"151","desc":"152"},{"messageId":"147","fix":"153","desc":"149"},{"messageId":"150","fix":"154","desc":"152"},{"messageId":"147","fix":"155","desc":"149"},{"messageId":"150","fix":"156","desc":"152"},"suggestUnknown",{"range":"157","text":"158"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"157","text":"159"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"160","text":"158"},{"range":"160","text":"159"},{"range":"161","text":"158"},{"range":"161","text":"159"},[174,177],"unknown","never",[663,666],[824,827]]